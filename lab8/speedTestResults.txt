Enter # strings to insert into hashmap.ULLMap: a
Please enter a positive integer: 10000
class hashmap.ULLMap: 0.40 sec

Enter # strings to insert into hashmap.MyHashMap: a
Please enter a positive integer: 10000
class hashmap.MyHashMap: 0.01 sec

Enter # strings to insert into Java's HashMap: a
Please enter a positive integer: 10000
Java's Built-in HashMap: 0.00 sec

Would you like to try more timed-tests? (y/n): y

Enter # strings to insert into hashmap.ULLMap: a
Please enter a positive integer: 100000
--Stack Overflow -- couldn't add 100000 strings.

Enter # strings to insert into hashmap.MyHashMap: a
Please enter a positive integer: 100000
class hashmap.MyHashMap: 0.02 sec

Enter # strings to insert into Java's HashMap: a
Please enter a positive integer: 100000
Java's Built-in HashMap: 0.01 sec

Would you like to try more timed-tests? (y/n): y

Enter # strings to insert into hashmap.ULLMap: a
Please enter a positive integer: 1000000
--Stack Overflow -- couldn't add 1000000 strings.

Enter # strings to insert into hashmap.MyHashMap: a
Please enter a positive integer: 1000000
class hashmap.MyHashMap: 0.33 sec

Enter # strings to insert into Java's HashMap: a
Please enter a positive integer: 1000000
Java's Built-in HashMap: 0.15 sec

 This program inserts random Strings of length L
 Into different types of maps as <String, Integer> pairs.

What would you like L to be?: 5

Enter # strings to insert into each map: a
Please enter a positive integer: 100000
class hashmap.MyHashMapALBuckets: 0.05 sec
class hashmap.MyHashMapLLBuckets: 0.05 sec
class hashmap.MyHashMapTSBuckets: 0.08 sec
class hashmap.MyHashMapHSBuckets: 0.08 sec
class hashmap.MyHashMapPQBuckets: 0.04 sec

Would you like to try more timed-tests? (y/n)y

Enter # strings to insert into each map: a
Please enter a positive integer: 1000000
class hashmap.MyHashMapALBuckets: 0.50 sec
class hashmap.MyHashMapLLBuckets: 0.51 sec
class hashmap.MyHashMapTSBuckets: 0.63 sec
class hashmap.MyHashMapHSBuckets: 0.81 sec
class hashmap.MyHashMapPQBuckets: 0.55 sec

 This program inserts random Strings of length L
 Into different types of maps as <String, Integer> pairs.

What would you like L to be?: 5

Enter # strings to insert into hashmap.ULLMap: a
Please enter a positive integer: 100000
--Stack Overflow -- couldn't add 100000 strings of length 5.

Enter # strings to insert into your hashmap.MyHashMap: a
Please enter a positive integer: 100000
class hashmap.MyHashMap: 0.05 sec

Enter # strings to insert into Java's HashMap: a
Please enter a positive integer: 100000
Java's Built-in HashMap: 0.02 sec